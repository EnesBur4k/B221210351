// <auto-generated />
using System;
using B221210351.EFContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B221210351.Migrations
{
    [DbContext(typeof(HastaneContext))]
    partial class HastaneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("B221210351.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("B221210351.Models.Adres", b =>
                {
                    b.Property<int>("AdresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresId"), 1L, 1);

                    b.Property<int>("BinaNo")
                        .HasColumnType("int");

                    b.Property<int>("CaddeId")
                        .HasColumnType("int");

                    b.Property<int>("DaireNo")
                        .HasColumnType("int");

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.Property<int>("IlceId")
                        .HasColumnType("int");

                    b.Property<int>("MahalleId")
                        .HasColumnType("int");

                    b.HasKey("AdresId");

                    b.HasIndex("CaddeId");

                    b.HasIndex("IlId");

                    b.HasIndex("IlceId");

                    b.HasIndex("MahalleId");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("B221210351.Models.AnabilimDali", b =>
                {
                    b.Property<int>("AnabilimDaliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnabilimDaliId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnabilimDaliId");

                    b.ToTable("AnabilimDallari");
                });

            modelBuilder.Entity("B221210351.Models.Cadde", b =>
                {
                    b.Property<int>("CaddeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaddeId"), 1L, 1);

                    b.Property<string>("CaddeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MahalleId")
                        .HasColumnType("int");

                    b.HasKey("CaddeId");

                    b.HasIndex("MahalleId");

                    b.ToTable("Cadde");
                });

            modelBuilder.Entity("B221210351.Models.Il", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlId"), 1L, 1);

                    b.HasKey("IlId");

                    b.ToTable("Sehirler");
                });

            modelBuilder.Entity("B221210351.Models.Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlceId"), 1L, 1);

                    b.Property<int?>("IlId")
                        .HasColumnType("int");

                    b.HasKey("IlceId");

                    b.HasIndex("IlId");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("B221210351.Models.Kisi", b =>
                {
                    b.Property<int>("KisiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KisiId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DogumGunu")
                        .HasColumnType("int");

                    b.Property<int>("KimlikNo")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KisiId");

                    b.HasIndex("AdresId");

                    b.ToTable("Kisiler");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Kisi");
                });

            modelBuilder.Entity("B221210351.Models.Mahalle", b =>
                {
                    b.Property<int>("MahalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MahalleId"), 1L, 1);

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.HasKey("MahalleId");

                    b.HasIndex("IlceId");

                    b.ToTable("Mahalleler");
                });

            modelBuilder.Entity("B221210351.Models.Poliklinik", b =>
                {
                    b.Property<int>("PoliklinikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoliklinikId"), 1L, 1);

                    b.Property<int>("AnabilimDaliId")
                        .HasColumnType("int");

                    b.HasKey("PoliklinikId");

                    b.HasIndex("AnabilimDaliId");

                    b.ToTable("Poliklinikler");
                });

            modelBuilder.Entity("B221210351.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuId"), 1L, 1);

                    b.Property<int>("DoktorKisiId")
                        .HasColumnType("int");

                    b.Property<int>("HastaKisiId")
                        .HasColumnType("int");

                    b.Property<int>("PoliklinikId")
                        .HasColumnType("int");

                    b.HasKey("RandevuId");

                    b.HasIndex("DoktorKisiId");

                    b.HasIndex("HastaKisiId");

                    b.HasIndex("PoliklinikId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("B221210351.Models.Doktor", b =>
                {
                    b.HasBaseType("B221210351.Models.Kisi");

                    b.Property<int>("CalismaSaati")
                        .HasColumnType("int");

                    b.Property<int>("NobetGunleri")
                        .HasColumnType("int");

                    b.Property<int>("PoliklinikId")
                        .HasColumnType("int");

                    b.HasIndex("PoliklinikId");

                    b.HasDiscriminator().HasValue("Doktor");
                });

            modelBuilder.Entity("B221210351.Models.Hasta", b =>
                {
                    b.HasBaseType("B221210351.Models.Kisi");

                    b.HasDiscriminator().HasValue("Hasta");
                });

            modelBuilder.Entity("B221210351.Models.Adres", b =>
                {
                    b.HasOne("B221210351.Models.Cadde", "Cadde")
                        .WithMany()
                        .HasForeignKey("CaddeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B221210351.Models.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B221210351.Models.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B221210351.Models.Mahalle", "Mahalle")
                        .WithMany()
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadde");

                    b.Navigation("Il");

                    b.Navigation("Ilce");

                    b.Navigation("Mahalle");
                });

            modelBuilder.Entity("B221210351.Models.Cadde", b =>
                {
                    b.HasOne("B221210351.Models.Mahalle", null)
                        .WithMany("Caddeler")
                        .HasForeignKey("MahalleId");
                });

            modelBuilder.Entity("B221210351.Models.Ilce", b =>
                {
                    b.HasOne("B221210351.Models.Il", null)
                        .WithMany("Ilceler")
                        .HasForeignKey("IlId");
                });

            modelBuilder.Entity("B221210351.Models.Kisi", b =>
                {
                    b.HasOne("B221210351.Models.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("B221210351.Models.Mahalle", b =>
                {
                    b.HasOne("B221210351.Models.Ilce", null)
                        .WithMany("Mahalleler")
                        .HasForeignKey("IlceId");
                });

            modelBuilder.Entity("B221210351.Models.Poliklinik", b =>
                {
                    b.HasOne("B221210351.Models.AnabilimDali", "AnabilimDali")
                        .WithMany("Poliklinikler")
                        .HasForeignKey("AnabilimDaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnabilimDali");
                });

            modelBuilder.Entity("B221210351.Models.Randevu", b =>
                {
                    b.HasOne("B221210351.Models.Doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorKisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B221210351.Models.Hasta", "Hasta")
                        .WithMany("Randevular")
                        .HasForeignKey("HastaKisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B221210351.Models.Poliklinik", "Poliklinik")
                        .WithMany()
                        .HasForeignKey("PoliklinikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");

                    b.Navigation("Poliklinik");
                });

            modelBuilder.Entity("B221210351.Models.Doktor", b =>
                {
                    b.HasOne("B221210351.Models.Poliklinik", "Poliklinik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("PoliklinikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poliklinik");
                });

            modelBuilder.Entity("B221210351.Models.AnabilimDali", b =>
                {
                    b.Navigation("Poliklinikler");
                });

            modelBuilder.Entity("B221210351.Models.Il", b =>
                {
                    b.Navigation("Ilceler");
                });

            modelBuilder.Entity("B221210351.Models.Ilce", b =>
                {
                    b.Navigation("Mahalleler");
                });

            modelBuilder.Entity("B221210351.Models.Mahalle", b =>
                {
                    b.Navigation("Caddeler");
                });

            modelBuilder.Entity("B221210351.Models.Poliklinik", b =>
                {
                    b.Navigation("Doktorlar");
                });

            modelBuilder.Entity("B221210351.Models.Hasta", b =>
                {
                    b.Navigation("Randevular");
                });
#pragma warning restore 612, 618
        }
    }
}
